#[macro_escape];

/* Bit definition for RCC_AHB1ENR register */
macro_rules! RCC_AHB1ENR_GPIOAEN (() =>           (0x00000001 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOBEN (() =>           (0x00000002 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOCEN (() =>           (0x00000004 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIODEN (() =>           (0x00000008 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOEEN (() =>           (0x00000010 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOFEN (() =>           (0x00000020 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOGEN (() =>           (0x00000040 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOHEN (() =>           (0x00000080 as uint32_t);)
macro_rules! RCC_AHB1ENR_GPIOIEN (() =>           (0x00000100 as uint32_t);)
macro_rules! RCC_AHB1ENR_CRCEN (() =>             (0x00001000 as uint32_t);)
macro_rules! RCC_AHB1ENR_BKPSRAMEN (() =>         (0x00040000 as uint32_t);)
macro_rules! RCC_AHB1ENR_CCMDATARAMEN (() =>      (0x00100000 as uint32_t);)
macro_rules! RCC_AHB1ENR_DMA1EN (() =>            (0x00200000 as uint32_t);)
macro_rules! RCC_AHB1ENR_DMA2EN (() =>            (0x00400000 as uint32_t);)
macro_rules! RCC_AHB1ENR_ETHMACEN (() =>          (0x02000000 as uint32_t);)
macro_rules! RCC_AHB1ENR_ETHMACTXEN (() =>        (0x04000000 as uint32_t);)
macro_rules! RCC_AHB1ENR_ETHMACRXEN (() =>        (0x08000000 as uint32_t);)
macro_rules! RCC_AHB1ENR_ETHMACPTPEN (() =>       (0x10000000 as uint32_t);)
macro_rules! RCC_AHB1ENR_OTGHSEN (() =>           (0x20000000 as uint32_t);)
macro_rules! RCC_AHB1ENR_OTGHSULPIEN (() =>       (0x40000000 as uint32_t);)

/* Bit definition for RCC_APB1ENR register */
macro_rules! RCC_APB1ENR_TIM2EN (() =>           (0x00000001 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM3EN (() =>           (0x00000002 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM4EN (() =>           (0x00000004 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM5EN (() =>           (0x00000008 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM6EN (() =>           (0x00000010 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM7EN (() =>           (0x00000020 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM12EN (() =>          (0x00000040 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM13EN (() =>          (0x00000080 as uint32_t);)
macro_rules! RCC_APB1ENR_TIM14EN (() =>          (0x00000100 as uint32_t);)
macro_rules! RCC_APB1ENR_WWDGEN (() =>           (0x00000800 as uint32_t);)
macro_rules! RCC_APB1ENR_SPI2EN (() =>           (0x00004000 as uint32_t);)
macro_rules! RCC_APB1ENR_SPI3EN (() =>           (0x00008000 as uint32_t);)
macro_rules! RCC_APB1ENR_USART2EN (() =>         (0x00020000 as uint32_t);)
macro_rules! RCC_APB1ENR_USART3EN (() =>         (0x00040000 as uint32_t);)
macro_rules! RCC_APB1ENR_UART4EN (() =>          (0x00080000 as uint32_t);)
macro_rules! RCC_APB1ENR_UART5EN (() =>          (0x00100000 as uint32_t);)
macro_rules! RCC_APB1ENR_I2C1EN (() =>           (0x00200000 as uint32_t);)
macro_rules! RCC_APB1ENR_I2C2EN (() =>           (0x00400000 as uint32_t);)
macro_rules! RCC_APB1ENR_I2C3EN (() =>           (0x00800000 as uint32_t);)
macro_rules! RCC_APB1ENR_CAN1EN (() =>           (0x02000000 as uint32_t);)
macro_rules! RCC_APB1ENR_CAN2EN (() =>           (0x04000000 as uint32_t);)
macro_rules! RCC_APB1ENR_PWREN (() =>            (0x10000000 as uint32_t);)
macro_rules! RCC_APB1ENR_DACEN (() =>            (0x20000000 as uint32_t);)

macro_rules! RCC_AHB1Periph_GPIOD (() => 		(0x00000008 as uint32_t);)



